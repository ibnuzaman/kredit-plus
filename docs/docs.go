// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/login": {
            "post": {
                "description": "Handles user login by verifying credentials and returning authentication data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user login",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login response",
                        "schema": {
                            "$ref": "#/definitions/model.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error response",
                        "schema": {
                            "$ref": "#/definitions/model.BaseResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/me": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Retrieves information about the currently authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get authenticated user info",
                "responses": {
                    "200": {
                        "description": "Successful user info response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.AuthMe"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized error response",
                        "schema": {
                            "$ref": "#/definitions/model.BaseResponse"
                        }
                    }
                }
            }
        },
        "/v1/customer/information": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Retrieves information about the customer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get customer information",
                "responses": {
                    "200": {
                        "description": "Successful customer information response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.CustomerResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized error response",
                        "schema": {
                            "$ref": "#/definitions/model.BaseResponse"
                        }
                    }
                }
            }
        },
        "/v1/customer/tenor": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Retrieves available tenor for the customer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get customer tenor",
                "responses": {
                    "200": {
                        "description": "Successful customer tenor response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.TenorResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized error response",
                        "schema": {
                            "$ref": "#/definitions/model.BaseResponse"
                        }
                    }
                }
            }
        },
        "/v1/transaction": {
            "get": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Retrieves available transactions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Per Page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful transaction list response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Transaction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized error response",
                        "schema": {
                            "$ref": "#/definitions/model.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AuthMe": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Message!"
                }
            }
        },
        "model.CustomerResponse": {
            "type": "object",
            "properties": {
                "date_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identity_file": {
                    "type": "string"
                },
                "legal_name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "place_birth": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                },
                "selfie_file": {
                    "type": "string"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.TenorResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                }
            }
        },
        "model.Transaction": {
            "type": "object",
            "properties": {
                "admin_fee": {
                    "type": "number"
                },
                "assets_name": {
                    "type": "string"
                },
                "contract_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "installment_amount": {
                    "type": "number"
                },
                "interest_amount": {
                    "type": "number"
                },
                "otr": {
                    "type": "number"
                },
                "tenor_months": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AccessToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "BE Kredit Plus",
	Description:      "This is the API documentation for Kredit Plus backend services.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
