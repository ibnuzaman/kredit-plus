basePath: /
definitions:
  model.AuthMe:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  model.BaseResponse:
    properties:
      data: {}
      message:
        example: Message!
        type: string
    type: object
  model.CreateLoanRequest:
    properties:
      assets_name:
        example: Credit Motorcycle
        type: string
      otr:
        example: 15000000
        minimum: 0
        type: number
      tenor_months:
        example: 18
        maximum: 32
        minimum: 1
        type: integer
    required:
    - assets_name
    - otr
    - tenor_months
    type: object
  model.CreateTransactionRequest:
    properties:
      amount:
        example: 1000
        minimum: 0
        type: number
      loan_id:
        example: 1
        type: integer
    required:
    - amount
    - loan_id
    type: object
  model.CustomerResponse:
    properties:
      date_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      identity_file:
        type: string
      legal_name:
        type: string
      nik:
        type: string
      place_birth:
        type: string
      salary:
        type: number
      selfie_file:
        type: string
    type: object
  model.LoanDetailResponse:
    properties:
      admin_fee:
        type: number
      assets_name:
        type: string
      end_date:
        type: string
      has_full_paid:
        type: boolean
      id:
        type: integer
      installment_amount:
        type: number
      otr:
        type: number
      pay_per_month:
        type: number
      start_date:
        type: string
      tenor_months:
        type: integer
      total_amount:
        type: number
      total_paid:
        type: integer
      transactions:
        items:
          $ref: '#/definitions/model.TransactionResponse'
        type: array
    type: object
  model.LoanResponse:
    properties:
      admin_fee:
        type: number
      assets_name:
        type: string
      end_date:
        type: string
      has_full_paid:
        type: boolean
      id:
        type: integer
      installment_amount:
        type: number
      otr:
        type: number
      pay_per_month:
        type: number
      start_date:
        type: string
      tenor_months:
        type: integer
      total_amount:
        type: number
      total_paid:
        type: integer
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.TenorResponse:
    properties:
      amount:
        type: number
      id:
        type: integer
      month:
        type: integer
    type: object
  model.TransactionResponse:
    properties:
      amount:
        type: number
      date:
        type: string
      id:
        type: integer
      interest_amount:
        type: number
      loan_id:
        type: integer
    type: object
info:
  contact: {}
  description: This is the API documentation for Kredit Plus backend services.
  title: BE Kredit Plus
  version: "1.0"
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Handles user login by verifying credentials and returning authentication
        data.
      parameters:
      - description: Payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: Authenticate user login
      tags:
      - auth
  /v1/auth/me:
    get:
      consumes:
      - application/json
      description: Retrieves information about the currently authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: Successful user info response
          schema:
            allOf:
            - $ref: '#/definitions/model.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.AuthMe'
              type: object
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - AccessToken: []
      summary: Get authenticated user info
      tags:
      - auth
  /v1/customer/information:
    get:
      consumes:
      - application/json
      description: Retrieves information about the customer.
      produces:
      - application/json
      responses:
        "200":
          description: Successful customer information response
          schema:
            allOf:
            - $ref: '#/definitions/model.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.CustomerResponse'
              type: object
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - AccessToken: []
      summary: Get customer information
      tags:
      - customer
  /v1/customer/tenor:
    get:
      consumes:
      - application/json
      description: Retrieves available tenor for the customer.
      produces:
      - application/json
      responses:
        "200":
          description: Successful customer tenor response
          schema:
            allOf:
            - $ref: '#/definitions/model.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.TenorResponse'
                  type: array
              type: object
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - AccessToken: []
      summary: Get customer tenor
      tags:
      - customer
  /v1/loan:
    get:
      consumes:
      - application/json
      description: Retrieves available loans.
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Per Page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful loan list response
          schema:
            allOf:
            - $ref: '#/definitions/model.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.LoanResponse'
                  type: array
              type: object
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - AccessToken: []
      summary: Get loan
      tags:
      - loan
    post:
      consumes:
      - application/json
      description: Creates a new loan.
      parameters:
      - description: Create Loan Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateLoanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successful loan creation response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad request error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "422":
          description: Validation error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - AccessToken: []
      summary: Create loan
      tags:
      - loan
  /v1/loan/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed information about a specific loan.
      parameters:
      - description: Loan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful loan detail response
          schema:
            allOf:
            - $ref: '#/definitions/model.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.LoanDetailResponse'
              type: object
        "400":
          description: Bad request error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "403":
          description: Forbidden error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - AccessToken: []
      summary: Get loan detail
      tags:
      - loan
  /v1/transaction:
    get:
      consumes:
      - application/json
      description: Retrieves available transactions.
      parameters:
      - default: 1
        description: Page
        in: query
        name: page
        type: integer
      - default: 10
        description: Per Page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful transaction list response
          schema:
            allOf:
            - $ref: '#/definitions/model.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.TransactionResponse'
                  type: array
              type: object
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - AccessToken: []
      summary: Get transaction
      tags:
      - transaction
    post:
      consumes:
      - application/json
      description: Creates a new transaction.
      parameters:
      - description: Create Transaction Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successful transaction creation response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad request error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "422":
          description: Validation error response
          schema:
            $ref: '#/definitions/model.BaseResponse'
      security:
      - AccessToken: []
      summary: Create transaction
      tags:
      - transaction
securityDefinitions:
  AccessToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
